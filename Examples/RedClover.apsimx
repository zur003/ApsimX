{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 587,
  "Version": 80,
  "ApsimVersion": "Version 0.0.0.0, built 2020-03-10",
  "Name": "Simulations",
  "Children": [
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Name": "Simulation",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "2014-02-01T00:00:00",
          "End": "2016-11-30T00:00:00",
          "Name": "clock",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Weather, Models",
          "FileName": "%root%\\Examples\\WeatherFiles\\lincoln.met",
          "ExcelWorkSheetName": "",
          "Name": "Weather",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "CaptureErrors": true,
          "CaptureWarnings": true,
          "CaptureSummaryText": true,
          "Name": "summaryfile",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "Children": [
            {
              "$type": "Models.Core.Folder, Models",
              "ShowPageOfGraphs": false,
              "Name": "Management",
              "Children": [
                {
                  "$type": "Models.Operations, Models",
                  "Operation": [
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-03-20",
                      "Action": "[RedClover].Sow(population: 500, cultivar: \"Colenso\", depth: 5, rowSpacing: 150)",
                      "Enabled": true
                    }
                  ],
                  "Name": "Sowing",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Operations, Models",
                  "Operation": [
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-10-31",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-03",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-05",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-07",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-10",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-11",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-12",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-17",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-18",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-19",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-24",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-25",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-27",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-01",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-02",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-04",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-08",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-09",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-12",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-15",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-17",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-19",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-20",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-21",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-22",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-25",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-26",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-27",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-28",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-29",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-30",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-02",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-05",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-08",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-09",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-12",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-13",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-16",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-19",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-20",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-21",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-26",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-27",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-01-29",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-02",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-04",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-05",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-09",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-11",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-12",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-16",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-17",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-18",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-24",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-26",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-27",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-02",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-03",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-05",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-10",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-12",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-13",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-16",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-19",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-20",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-23",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-24",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-26",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-30",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-04-02",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-04-03",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-04-06",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-04-08",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-04-17",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-05-20",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-06-09",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-09-09",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-09-30",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-02",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-06",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-09",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-12",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-13",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-16",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-20",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-21",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-23",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-26",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-27",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-02",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-03",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-04",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-06",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-09",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-11",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-16",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-18",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-20",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-23",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-24",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-25",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-27",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-30",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-01",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-04",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-07",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-09",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-10",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-22",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-24",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-26",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-29",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-31",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-01",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-07",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-09",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-11",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-12",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-13",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-15",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-21",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-25",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-30",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-02",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-03",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-05",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-08",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-11",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-12",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-15",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-16",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-22",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-23",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-25",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-26",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-01",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-02",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-04",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-07",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-08",
                      "Action": "[Irrigation].Apply(amount: 4, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-10",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-14",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-15",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-18",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-21",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-22",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-23",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-03-28",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-04-02",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-04-08",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-05-04",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-08-31",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-09-30",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-01",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-05",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-12",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-18",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-19",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-27",
                      "Action": "[Irrigation].Apply(amount: 10, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-31",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-01",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-03",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-08",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-10",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-11",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-14",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-21",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-22",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-23",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-24",
                      "Action": "[Irrigation].Apply(amount: 7, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-28",
                      "Action": "[Irrigation].Apply(amount: 8, efficiency: 0.8)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-29",
                      "Action": "[Irrigation].Apply(amount: 9, efficiency: 0.8)",
                      "Enabled": true
                    }
                  ],
                  "Name": "IrrigationSchedule",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Operations, Models",
                  "Operation": null,
                  "Name": "NRate",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Operations, Models",
                  "Operation": [
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-10-23",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-11-25",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2014-12-30",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-02-04",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-03-10",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-04-16",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-06-09",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-10-06",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-11-16",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2015-12-16",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-01-25",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-02-24",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-04-09",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-05-24",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-10-03",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2016-11-11",
                      "Action": "[DefoliationManager].Script.Defoliate(defoliationType: \"Cut\", amountDM: 40, amountType: \"ResidualDM\", duration: 1)",
                      "Enabled": true
                    }
                  ],
                  "Name": "DefoliationSchedule",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "// Performs defoliations, or removes biomass, from any existing plant (PMF and/or AgPasture) based on a set of given rules.  \r\n// Defoliations can be triggered automatically by this manager or be called from another Script or a Schedule model.\r\n// Developed by RCichota, last updated in 31/Mar/2019\r\n\r\nnamespace Models\r\n{\r\n    using System;\r\n    using System.Xml.Serialization;\r\n    using System.Collections.Generic;\r\n    using APSIM.Shared.Utilities;\r\n    using Models.Core;\r\n    using Models.Soils;\r\n    using Models.PMF;\r\n    using Models.Interfaces;\r\n    using Models.PMF.Interfaces;\r\n\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //> Links to other Apsim models\r\n        [Link] private Clock clock;\r\n        [Link] private Zone myZone;\r\n        [Link] private Soil mySoil;\r\n        [Link(ByName = true)] private ISolute Urea;\r\n        [Link] private ISummary mySummary;\r\n        //Auxiliary 'links'\r\n        private List<Plant> PMFSpecies = new List<Plant>();\r\n        private List<AgPasture.PastureSpecies> AgPSpecies = new List<AgPasture.PastureSpecies>();\r\n\r\n        //> Events raised by this manager\r\n        public event BiomassRemovedDelegate BiomassRemoved;\r\n\r\n        //> User inputs from properties tab\r\n        [Separator(\"Generic defoliation management - removes biomass from PMF and AgPasture species, plus residue management\")]\r\n        [Description(\"Allow this manager to control defoliations? \")]\r\n        public bool AutomaticManagementIsEnabled { get; set; }\r\n        [Description(\"Date to start the defoliation management (dd/mm/yyyy): \")]\r\n        public DateTime DefoliationRotationStartDate { get; set; }\r\n        [Description(\"Date to end the defoliation management (dd/mm/yyyy): \")]\r\n        public DateTime DefoliationRotationEndDate { get; set; }\r\n\r\n        [Separator(\"Parameters defining how the defoliation is managed\")]\r\n        [Description(\"What type of defoliation should be triggered? \")]\r\n        public DefoliationTypes DefoliateType { get; set; }\r\n        [Description(\"How the defoliations should be triggered? \")]\r\n        public DefoliationTriggerTypes DefoliationTriggerType { get; set; }\r\n        [Description(\"  Minimum number of days between defoliations, used if trigger is an interval: \")]\r\n        public int IntervalBetweenDefoliations { get; set; }\r\n        [Description(\"  Minimum standing biomass to start defoliations, used if trigger is DM target(g/m2): \")]\r\n        public int TargetStandingBiomass { get; set; }\r\n        [Description(\"Duration of each defoliation event (days): \")]\r\n        public int DurationOfEachDefoliation { get; set; }\r\n        [Description(\"Which amount is being defined? \")]\r\n        public DefoliateAmountTypes RemoveAmountType { get; set; }\r\n        [Description(\"DM amount to use (g/m2): \")]\r\n        public double AmountForEachDefoliation { get; set; }\r\n        [Description(\"For PMF species, allow all biomass to be removed? \")]\r\n        public bool RemoveAllBiomassIsEnabled { get; set; }\r\n\r\n        [Separator(\"Parameters defining the management of the defoliated biomass\")]\r\n        [Description(\"How much of the DM defoliated is to be removed from the field? \")]\r\n        public DMRemovalTypes DMRemoveType { get; set; }\r\n        [Description(\"  Fraction of DM to remove off field, if using UserDefinedFraction (0-1): \")]\r\n        public double FractionDMToRemove { get; set; }\r\n        [Description(\"How much of the N defoliated is to be removed from the field? \")]\r\n        public NRemovalTypes NRemoveType { get; set; }\r\n        [Description(\"  Fraction of N to remove off field, if using UserDefinedFraction (0-1): \")]\r\n        public double FractionNToRemove { get; set; }\r\n        [Description(\"How the non-removed material is returned to the field? \")]\r\n        public ReturnAsTypes ReturnType { get; set; }\r\n\r\n        [Separator(\"Parameters for partitioning non-removed N into urine and dung\")]\r\n        [Description(\"How the partition of N to dung and urine is defined? \")]\r\n        public DungNContentTypes NDungType { get; set; }\r\n        [Description(\"  Proportion of N returned in dung, if using DefineProportion (0-1): \")]\r\n        public double ProportionN2Dung { get; set; }\r\n        [Description(\"  The C:N of dung, if using DefineCNratio (typically around 20): \")]\r\n        public double CNRatioDung { get; set; }\r\n        [Description(\"Soil depth down to which urine should be applied (mm): \")]\r\n        public double UrineDepth { get; set; }\r\n\r\n        //> Outputs from this manager\r\n        [XmlIgnore][Units(\"g/m2\")] // Pasture DM defoliated (removed from plants) today\r\n        public double DefoliatedWt{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // N in the pasture material defoliated today\r\n        public double DefoliatedN{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Pasture DM harvested (removed from plants minus direct residue) today\r\n        public double HarvestedWt{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // N in the pasture material harvested today\r\n        public double HarvestedN{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Pasture DM actually removed from the field\r\n        public double RemovedWt{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // N in the pasture material removed from the field\r\n        public double RemovedN{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Pasture DM returned by this manager to the field\r\n        public double ReturnedWt{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // N in the pasture material returned by this manager to the field\r\n        public double ReturnedN{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Non-removed N returned as dung (to SurfaceOM)\r\n        public double NReturnedInDung{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Non-removed N returned as urine (soil urea)\r\n        public double NReturnedInUrine{ get; set; }\r\n        [XmlIgnore][Units(\"days\")] // Number of days since the end of last defoliation event\r\n        public int DaysSinceLastDefoliation{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Total standing aboveground DM before a defoliation\r\n        public double PreHarvestDM{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Total standing aboveground DM after a defoliation\r\n        public double PostHarvestDM{ get; set; }\r\n        [XmlIgnore][Units(\"g/m2\")] // Total pasture DM harvested over a complete defoliation event\r\n        public double RotationHarvestedDM{ get; set; }\r\n\r\n        //> Internal variables\r\n        private string baseDefoliationType;              // type of defoliation, as set in UI (Cut, Graze, or harvest)\r\n        private string typeOfDefoliation;              // type of defoliation, as defined in Defoliate() (Cut, Graze, or harvest)\r\n        private string baseAmountType;                  // type of DM amount, as set in UI (ResidualDM or DMToRemove)\r\n        private string typeOfAmount;                  // type of DM amount, as defined in Defoliate() (ResidualDM, DMToRemove, or UseDefoliationFractions)\r\n        private double amountGiven;                      // DM amount given, to use in the defoliation management (g/m2)\r\n        private double herbageToRemove;                  // total herbage to remove per day (g/m2)\r\n        private RemovalFractions defoliationFractions;// fraction of each organ to defoliate (PMF species)\r\n        private double[] urineFraction;                  // fraction of urine to be applied in each soil layer\r\n        private int durationOfDefoliation;              // duration of a defoliation event\r\n        private int daysDefoliating;                  // counter for days within a defoliation event\r\n        private double cumAmountHarvested;              // cumulative defoliated amount within each event\r\n        // auxiliary boolean\r\n        private bool aDefoliationHasHappened = false; // flag whether a defoliation has happened in this simulation run\r\n\r\n        // auxiliary - lists of species and removal fractions\r\n        private string[] swardSpeciesName;              // name of each species in the sward\r\n        private string[] swardSpeciesType;              // type of each species in the sward (PMF or AgPasture)\r\n        private double[] speciesFraction;              // biomass fraction of harvestable material of each species\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n            // check the type of defoliation given\r\n            if (DefoliateType == DefoliationTypes.Cut)\r\n                baseDefoliationType = \"Cut\";\r\n            else if (DefoliateType == DefoliationTypes.Graze)\r\n                baseDefoliationType = \"Graze\";\r\n            else\r\n                baseDefoliationType = \"Harvest\";\r\n\r\n            // check the type of amount given\r\n            if (RemoveAmountType == DefoliateAmountTypes.DMToRemove)\r\n                baseAmountType = \"DMToRemove\";\r\n            else if (RemoveAmountType == DefoliateAmountTypes.ResidualDM)\r\n                baseAmountType = \"ResidualDM\";\r\n            else\r\n                baseAmountType = \"UseDefoliationFractions\";\r\n\r\n            // check the interval between events\r\n            if (IntervalBetweenDefoliations < 1)\r\n                throw new Exception(\"The interval between defoliation events must be at least one day\");\r\n\r\n            // check the duration for each defoliation\r\n            if(DurationOfEachDefoliation <= 0)\r\n                throw new Exception(\"The duration of defoliations cannot be zero or negative!\");\r\n\r\n            // check the fraction of defoliated material to remove from the field\r\n            if (DMRemoveType == DMRemovalTypes.RemoveAll)\r\n                FractionDMToRemove = 1.0;\r\n            else if (DMRemoveType == DMRemovalTypes.RemoveNone)\r\n                FractionDMToRemove = 0.0;\r\n            else if (DMRemoveType == DMRemovalTypes.BasedOnDigestibility)\r\n                FractionDMToRemove = -1.0;  // will be calculated dynamically\r\n            else // DMRemoveType == DMRemovalTypes.UserDefinedFraction\r\n            {\r\n                if (FractionDMToRemove < 0.0)\r\n                    throw new Exception(\"The fraction of DM defoliated to remove from the field cannot be negative!\");\r\n            }\r\n\r\n            // check the fraction of defoliated N to remove from the field\r\n            if (NRemoveType == NRemovalTypes.RemoveAll)\r\n                FractionNToRemove = 1.0;\r\n            else if (NRemoveType == NRemovalTypes.RemoveNone)\r\n                FractionNToRemove = 0.0;\r\n            else if (NRemoveType == NRemovalTypes.ProportionalToDM)\r\n                FractionNToRemove = FractionDMToRemove;\r\n            else // NRemoveType == NRemovalTypes.UserDefinedFraction\r\n            {\r\n                if (FractionNToRemove < 0.0)\r\n                    throw new Exception(\"The fraction of defoliated N to remove from the field cannot be negative!\");\r\n            }\r\n\r\n            // set up the links to all plant species\r\n            foreach (Plant species in Apsim.Children(myZone, typeof(Plant)))\r\n                PMFSpecies.Add(species);\r\n            foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))\r\n                AgPSpecies.Add(species);\r\n\r\n            int numPlants = PMFSpecies.Count + AgPSpecies.Count;\r\n            swardSpeciesName = new string[numPlants];\r\n            swardSpeciesType = new string[numPlants];\r\n            int i = 0;\r\n            foreach (Plant species in Apsim.Children(myZone, typeof(Plant)))\r\n            {\r\n                swardSpeciesName[i] = species.Name;\r\n                swardSpeciesType[i] = \"PMF\";\r\n                i += 1;\r\n            }\r\n            foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))\r\n            {\r\n                swardSpeciesName[i] = species.Name;\r\n                swardSpeciesType[i] = \"AgPasture\";\r\n                i += 1;\r\n            }\r\n\r\n            // make sure that management starts when RotationStartDate < simulationStartDay\r\n            if ((clock.Today > DefoliationRotationStartDate) && (clock.Today < DefoliationRotationEndDate))\r\n                DefoliationRotationStartDate = clock.Today;\r\n\r\n            // initialise some variables\r\n            speciesFraction = new double[numPlants];\r\n            defoliationFractions = new RemovalFractions();\r\n            DaysSinceLastDefoliation = 0;\r\n            durationOfDefoliation = -1;\r\n            daysDefoliating = 0;\r\n            resetMyOutputs();\r\n\r\n            // set the fraction of urine for each layer\r\n            if (ReturnType == ReturnAsTypes.AsDungUrine)\r\n            {\r\n                double depthFromSurface = 0.0;\r\n                for (int layer = 0; layer < mySoil.Thickness.Length; layer++)\r\n                {\r\n                    depthFromSurface += mySoil.Thickness[layer];\r\n                    if (depthFromSurface >= UrineDepth)\r\n                    { // bottom layer found\r\n                        urineFraction = new double[layer + 1];\r\n                        double atZ0;\r\n                        double atZ1;\r\n                        double distFactor = 1.5;\r\n                        double totalProp = UrineDepth * Math.Pow(1.0, distFactor) / (distFactor + 1.0);\r\n                        depthFromSurface = 0.0;\r\n                        atZ1 = (UrineDepth - depthFromSurface) * Math.Pow(1.0 - depthFromSurface / UrineDepth, distFactor) / (distFactor + 1.0);\r\n                        for (int z = 0; z < layer+1; z++)\r\n                        {\r\n                            atZ0 = atZ1;\r\n                            depthFromSurface += mySoil.Thickness[z];\r\n                            atZ1 = (UrineDepth - depthFromSurface) * Math.Pow(1.0 - depthFromSurface / UrineDepth, distFactor) / (distFactor + 1);\r\n                            if (1.0 - (depthFromSurface / UrineDepth) < 0.0)\r\n                                atZ1 = 0;\r\n                            urineFraction[z] = (atZ0 - atZ1) / totalProp;\r\n                        }\r\n                        layer = mySoil.Thickness.Length;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // write message in summary\r\n            mySummary.WriteMessage(this,\" Automatic defoliation manager initialised\");\r\n            if (AutomaticManagementIsEnabled)\r\n            {\r\n                mySummary.WriteMessage(this, \"   Defoliations will happen between \" + DefoliationRotationStartDate.ToShortDateString()\r\n                                          + \" and \" + DefoliationRotationEndDate.ToShortDateString() + \".\");\r\n                mySummary.WriteMessage(this, \"   Biomass from the sward will be defoliated simulating a \\\"\" + baseDefoliationType + \"\\\" rotation.\");\r\n                if (DefoliationTriggerType == DefoliationTriggerTypes.TargetStandingBiomass)\r\n                    mySummary.WriteMessage(this, \"   Events will happen whenever aboveground biomass surpasses \" + TargetStandingBiomass.ToString(\"#0.0\") + \" g/m2.\");\r\n                else\r\n                    mySummary.WriteMessage(this, \"   Events will happen every \" + IntervalBetweenDefoliations + \" days, if there is enough biomass.\");\r\n                if(baseAmountType == \"ResidualDM\")\r\n                    mySummary.WriteMessage(this, \"   Removing biomass down to a residual amount of \" + AmountForEachDefoliation.ToString(\"#.0\") + \" g/m2 over \" \r\n                                             + DurationOfEachDefoliation + \" days.\");\r\n                else\r\n                    mySummary.WriteMessage(this, \"   Removing \" + AmountForEachDefoliation.ToString(\"#.0\") + \" g/m2 of biomass per day over \" \r\n                                             + DurationOfEachDefoliation + \" days.\");\r\n            }\r\n            else\r\n            {\r\n                mySummary.WriteMessage(this,\"   Automatic defoliations are currently disabled, though defoliations can be triggered by another manager\");\r\n                mySummary.WriteMessage(this,\"   If called, the manager will remove biomass from the sward simulating a \\\"\" + baseDefoliationType + \"\\\" event.\");\r\n            }\r\n\r\n            if(ReturnType == ReturnAsTypes.AsDungUrine)\r\n            {\r\n                mySummary.WriteMessage(this,\"   Non-removed material will be returned as dung and urine. Urine added to soil according to proportions: \"\r\n                + string.Join(\", \",urineFraction));\r\n            }\r\n            else\r\n                mySummary.WriteMessage(this,\"   Non-removed material will be returned as residue.\");\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            // check whether we need to continue defoliationg, i.e. within a multi-day defoliation event (need to check this first in the day)\r\n            if ((daysDefoliating > 0) && (daysDefoliating < durationOfDefoliation))\r\n            {\r\n                // reset outputs\r\n                resetMyOutputs();\r\n\r\n                // re-check the amount to defoliate\r\n                double harvestableBiomass = harvestableSwardBiomass(\"All\", \"Harvestable\");\r\n                if (typeOfAmount == \"DMToRemove\")\r\n                {\r\n                    if(harvestableBiomass > 0.001)\r\n                        herbageToRemove = Math.Min(harvestableBiomass, (amountGiven - cumAmountHarvested) / (durationOfDefoliation - daysDefoliating));\r\n                }\r\n                else if (typeOfAmount == \"ResidualDM\")\r\n                {\r\n                    double currentDM = standingSwardBiomassWt;\r\n                    if (currentDM > amountGiven)\r\n                        herbageToRemove = Math.Min(harvestableBiomass, (currentDM - amountGiven) / (durationOfDefoliation - daysDefoliating));\r\n                }\r\n\r\n                // remove plant biomass and return residue\r\n                if (Math.Abs(herbageToRemove) >= 0.001)\r\n                {\r\n                    // set biomass removal\r\nmySummary.WriteMessage(this, \"   Defoliation initialised on DoManagement - \" + clock.Today.Date.ToShortDateString());\r\n                    defoliateSward(herbageToRemove, typeOfDefoliation);\r\n\r\n                    // return residue or excreta\r\n                    if(ReturnedWt + ReturnedN > 0.0)\r\n                    {\r\n                        if (ReturnType == ReturnAsTypes.AsResidue)\r\n                            returnResidues();\r\n                        else\r\n                            returnExcreta();\r\n                    }\r\n\r\n                    // gather amount removed this event\r\n                    cumAmountHarvested += HarvestedWt;\r\n                }\r\n\r\n                daysDefoliating += 1;\r\n            }\r\n\r\n            // check whether a defoliation ended yesterday\r\n            if (daysDefoliating < 0)\r\n            { // clean up variables\r\n                resetMyOutputs();\r\n                daysDefoliating = 0;\r\n            }\r\n\r\n            // check whether automatic defoliations are enabled\r\n            if (AutomaticManagementIsEnabled)\r\n            {\r\n                // check whether we are within the period in which defoliations can happen\r\n                if ((clock.Today.Date >= DefoliationRotationStartDate.Date) && (clock.Today.Date <= DefoliationRotationEndDate.Date))\r\n                {\r\n                    if (clock.Today.Date == DefoliationRotationStartDate.Date)\r\n                        DaysSinceLastDefoliation = IntervalBetweenDefoliations;\r\n\r\n                    // check whether we should start a defoliation event\r\n                    if (DefoliationTriggerType == DefoliationTriggerTypes.FixedInterval)\r\n                    {\r\n                        if (DaysSinceLastDefoliation == IntervalBetweenDefoliations)\r\n                            Defoliate(baseDefoliationType, AmountForEachDefoliation, baseAmountType, DurationOfEachDefoliation);\r\n                    }\r\n                    else if (DefoliationTriggerType == DefoliationTriggerTypes.TargetInterval)\r\n                    {\r\n                        if (DaysSinceLastDefoliation >= IntervalBetweenDefoliations)\r\n                            Defoliate(baseDefoliationType, AmountForEachDefoliation, baseAmountType, DurationOfEachDefoliation);\r\n                    }\r\n                    else  //DefoliationTriggerType == DefoliationTriggerTypes.TargetStandingBiomass\r\n                    {\r\n                        if (standingSwardBiomassWt >= TargetStandingBiomass)\r\n                            Defoliate(baseDefoliationType, AmountForEachDefoliation, baseAmountType, DurationOfEachDefoliation);\r\n                    }\r\n                }\r\n                //// Note: Only the code above, responsible for triggering automatic events, is limited by 'AutomaticManagementIsEnabled'. \r\n                ////       The rest of the code is still available to perform one-off defoliations.\r\n                ////       It can be called from another manager or a schedulle thingy via Defoliate().\r\n            }\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagementCalculations\")]\r\n        private void OnDoManagementCalculations(object sender, EventArgs e)\r\n        {\r\n            // check whether a defoliation event has just been completed\r\n            if (daysDefoliating == durationOfDefoliation)\r\n            {\r\n                // get amount of biomass remaining and zero counters\r\n                PostHarvestDM = standingSwardBiomassWt;\r\n                RotationHarvestedDM = cumAmountHarvested;\r\n                aDefoliationHasHappened = true;\r\n                daysDefoliating = -1;\r\n            }\r\n\r\n            // count the days after a defoliation\r\n            if (aDefoliationHasHappened && (daysDefoliating == 0))\r\n                DaysSinceLastDefoliation += 1;\r\n        }\r\n\r\n        /// <summary>Sets up a defoliation event.</summary>\r\n        /// <param name=\"defoliationType\">Type of defoliation (cut, graze, or harvest)</param>\r\n        /// <param name=\"amountDM\">Amount of biomass to use (g/m2)</param>\r\n        /// <param name=\"amountType\">How the DM amount is interpreted (toRemove, residual)</param>\r\n        /// <param name=\"duration\">Number of days to defoliate over</param>\r\n        public void Defoliate(string defoliationType, double amountDM, string amountType, int duration)\r\n        {\r\n            // check whether there are plants in the sward that can be defoliated\r\n            if (swardHasLivingPlants)\r\n            {\r\n                // check the defoliation type\r\n                if (defoliationType.ToLower() == \"cut\")\r\n                    typeOfDefoliation = \"Cut\";\r\n                else if (defoliationType.ToLower() == \"graze\")\r\n                    typeOfDefoliation = \"Graze\";\r\n                else if (defoliationType.ToLower() == \"harvest\")\r\n                    typeOfDefoliation = \"Harvest\";\r\n                else\r\n                    throw new Exception(\"Defoliation type should be either \\\"Cut\\\", \\\"Graze\\\", or \\\"Harvest\\\"!\");\r\n\r\n                // check DM amount given\r\n                if (amountDM < 0.0)\r\n                    throw new Exception(\"Amount to defoliate cannot be negative!\");\r\n                else\r\n                    amountGiven = amountDM;\r\n\r\n                // check the type of amount given\r\n                if (amountType.ToLower() == \"dmtoremove\")\r\n                    typeOfAmount = \"DMToRemove\";\r\n                else if (amountType.ToLower() == \"residualdm\")\r\n                    typeOfAmount = \"ResidualDM\";\r\n                else if (amountType.ToLower() == \"usedefoliationfractions\")\r\n                    typeOfAmount = \"UseDefoliationFractions\";\r\n                else\r\n                    throw new Exception(\"Amount type should be \\\"DMToRemove\\\", \\\"ResidualDM\\\", or \\\"UseDefoliationFractions\\\"!\");\r\n\r\n                // check duration given\r\n                if (duration <= 0)\r\n                    throw new Exception(\"Duration of defoliation cannot be zero or negative!\");\r\n                else\r\n                    durationOfDefoliation = duration;\r\n\r\n                // check existing biomass and amount to remove\r\n                PreHarvestDM = standingSwardBiomassWt;\r\n                herbageToRemove = 0.0;\r\n                double harvestableBiomass = harvestableSwardBiomass(\"All\", \"Harvestable\");\r\n                if (typeOfAmount == \"UseDefoliationFractions\")\r\n                { // amount given is ignored, removal based on fractions\r\n                    amountGiven = 0.0;\r\n                    if (harvestableBiomass > 0.0)\r\n                        herbageToRemove = -1.0;\r\n\r\n                    mySummary.WriteMessage(this, \"   Defoliation triggered, removing biomass using the removal fractions (set or default), during \" + durationOfDefoliation + \" days\");\r\n                }\r\n                else if (typeOfAmount == \"DMToRemove\")\r\n                {\r\n                    if (amountGiven > 0.001)\r\n                    { // a meaningful amount was given, check whether all can be removed\r\n                        if (harvestableBiomass > 0.001)\r\n                            herbageToRemove = Math.Min(harvestableBiomass, amountGiven / durationOfDefoliation);\r\n\r\n                        mySummary.WriteMessage(this, \"   Defoliation triggered, attempting to remove \" + amountGiven.ToString(\"#0.0\") + \" g/m2 of biomass over \" + durationOfDefoliation + \" days\");\r\n                    }\r\n                }\r\n                else if (typeOfAmount == \"ResidualDM\")\r\n                {\r\n                    // check how much biomass will be removed\r\n                    if (PreHarvestDM > amountGiven)\r\n                        herbageToRemove = Math.Min(harvestableBiomass, (PreHarvestDM - amountGiven) / durationOfDefoliation);\r\n\r\n                    mySummary.WriteMessage(this, \"   Defoliation triggered, attempting to remove biomass down to \" + amountGiven.ToString(\"#0.0\") + \" g/m2 over \" + durationOfDefoliation + \" days\");\r\n                }\r\n\r\n                // can defoliation begin?\r\n                if (Math.Abs(herbageToRemove) >= 0.001)\r\n                {\r\n                    // set off first defoliation\r\nmySummary.WriteMessage(this, \"   Defoliation initialised on Defoliate - \" + clock.Today.Date.ToShortDateString());\r\n                    defoliateSward(herbageToRemove, typeOfDefoliation);\r\n\r\n                    // return residue or excreta\r\n                    if(ReturnedWt + ReturnedN > 0.0)\r\n                    {\r\n                        if (ReturnType == ReturnAsTypes.AsResidue)\r\n                            returnResidues();\r\n                        else\r\n                            returnExcreta();\r\n                    }\r\n\r\n                    // gather values for this event\r\n                    cumAmountHarvested = HarvestedWt;\r\n                    daysDefoliating = 1;\r\n                    DaysSinceLastDefoliation = 0;\r\n                }\r\n                else\r\n                {\r\n                    // abort command as there is not enough biomass, check interval type\r\n                    if (DefoliationTriggerType == DefoliationTriggerTypes.FixedInterval)\r\n                    { // count the event as if it did happen\r\n                        cumAmountHarvested = 0.0;\r\n                        daysDefoliating = 1;\r\n                        DaysSinceLastDefoliation = 0;\r\n                    }\r\n\r\n                    mySummary.WriteMessage(this, \"   Defoliation did not happend because current biomass (\" + PreHarvestDM.ToString(\"#0.0\") + \" g/m2) is too low (total harvestable = \" + harvestableBiomass.ToString(\"#0.0\") + \" g/m2)\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                mySummary.WriteMessage(this, \"   Defoliation did not happend because there is no growing plants in the sward\");\r\n            }\r\n        }\r\n\r\n        /// <summary>Resets the values of outputs.</summary>\r\n        private void resetMyOutputs()\r\n        {\r\n            DefoliatedWt = 0.0;\r\n            DefoliatedN = 0.0;\r\n            HarvestedWt = 0.0;\r\n            HarvestedN = 0.0;\r\n            RemovedWt = 0.0;\r\n            RemovedN = 0.0;\r\n            ReturnedWt = 0.0;\r\n            ReturnedN = 0.0;\r\n            NReturnedInDung = 0.0;\r\n            NReturnedInUrine = 0.0;\r\n            RotationHarvestedDM = 0.0;\r\n        }\r\n\r\n        /// <summary>Flags whether there is any living plant in the sward.</summary>\r\n        private bool swardHasLivingPlants\r\n        {\r\n            get\r\n            {\r\n                bool result = false;\r\n                foreach (Plant species in PMFSpecies)\r\n                       result |= species.IsAlive;\r\n                foreach (AgPasture.PastureSpecies species in AgPSpecies)\r\n                       result |= species.IsAlive;\r\n                return result;\r\n            }\r\n        }\r\n\r\n        /// <summary>Amount of plant biomass aboveground (g/m2).</summary>\r\n        private double standingSwardBiomassWt\r\n        {\r\n            get\r\n            {\r\n                double result = 0.0;\r\n                foreach (Plant species in PMFSpecies)\r\n                   result += (double)myZone.Get(species.Name+\".AboveGround.Wt\");\r\n                foreach (AgPasture.PastureSpecies species in AgPSpecies)\r\n                    result += species.StandingHerbageWt*0.1;\r\n                return result;\r\n            }\r\n        }\r\n\r\n        /// <summary>Amount of N in plant's biomass aboveground (g/m2).</summary>\r\n        private double standingSwardBiomassN\r\n        {\r\n            get\r\n            {\r\n                double result = 0.0;\r\n                foreach (Plant species in PMFSpecies)\r\n                   result += (double)myZone.Get(species.Name+\".AboveGround.N\");\r\n                foreach (AgPasture.PastureSpecies species in AgPSpecies)\r\n                    result += species.StandingHerbageN*0.1;\r\n                return result;\r\n            }\r\n        }\r\n\r\n        /// <summary>Amount of plant biomass from all organs available for defoliation (g/m2).</summary>\r\n        /// <remarks>Assumes that organs with a BiomassRemoval.FractionToRemove > 0 are harvestable.\r\n        /// For AgPasture, harvestable is based on minimum DM.</remarks>\r\n        /// <param name=\"plantName\">The name of the plant to retrieve its biomass</param>\r\n        /// <param name=\"fractionType\">The type of fraction to use (harvestable or total)</param>\r\n        private double harvestableSwardBiomass(string plantName, string fractionType)\r\n        {\r\n            double amountWt = 0.0;\r\n            double fraction = 0.0;\r\n            foreach (Plant species in PMFSpecies)\r\n            {\r\n                if ((plantName == \"All\") || (species.Name == plantName))\r\n                {\r\n                    if (species.AboveGround.Wt > 0.0)\r\n                    {\r\n                        foreach (IOrgan organ in Apsim.Children(species, typeof(IOrgan)))\r\n                        { // consider only amounts toRemove\r\n                            fraction = (double)myZone.Get(species.Name + \".\" + organ.Name + \".BiomassRemovalDefaults.\" + typeOfDefoliation + \".FractionLiveToRemove\");\r\n                            if ((fractionType == \"Total\") && (fraction > 0.0))\r\n                                fraction = 1.0;\r\n                            else if (RemoveAllBiomassIsEnabled && (fraction > 0.0))\r\n                                fraction = 0.95;\r\n                            amountWt += (double)myZone.Get(species.Name + \".\" + organ.Name + \".Live.Wt\") * fraction;\r\n                            fraction = (double)myZone.Get(species.Name + \".\" + organ.Name + \".BiomassRemovalDefaults.\" + typeOfDefoliation + \".FractionDeadToRemove\");\r\n                            if ((fractionType == \"Total\") && (fraction > 0.0))\r\n                                fraction = 1.0;\r\n                            else if (RemoveAllBiomassIsEnabled && (fraction > 0.0))\r\n                                fraction = 0.95;\r\n                            amountWt += (double)myZone.Get(species.Name + \".\" + organ.Name + \".Dead.Wt\") * fraction;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            foreach (AgPasture.PastureSpecies species in AgPSpecies)\r\n            {\r\n                if ((plantName == \"All\") || (species.Name == plantName))\r\n                {\r\n                    if (fractionType == \"Total\")\r\n                        amountWt += species.AboveGroundWt*0.1;\r\n                    else\r\n                        amountWt += species.HarvestableWt*0.1;\r\n                }\r\n            }\r\n\r\n            return amountWt;\r\n        }\r\n\r\n        /// <summary>Triggers the actual biomass removal and gather DM and N amounts.</summary>\r\n        /// <param name=\"amountToRemove\">The total DM amount to remove (g/m2)</param>\r\n        /// <param name=\"removalType\">The type of removal (Cut, Graze, Harvest)</param>\r\n        private void defoliateSward(double amountToRemove, string removalType)\r\n        {\r\n            // get the amounts of biomass and N before today's defoliation\r\n            double preRemovalDM = standingSwardBiomassWt;\r\n            double preRemovalN = standingSwardBiomassN;\r\n            double fractionToRemove = 0.0;\r\n\r\n            // gather the actual biomass removal fractions, checking whether they need to be adjusted\r\n            double totalHarvestableAmount = harvestableSwardBiomass(\"All\", \"Harvestable\");\r\n            if (amountToRemove > 0.0)\r\n            { // an amount was given for defoliation, adjust removal fractions for each species in order to remove the amount specified\r\n                fractionToRemove = amountToRemove / totalHarvestableAmount;\r\n            }\r\n            else if (amountToRemove < 0.0)\r\n            { // defoliation is not based on an amount, removal is determined simply by the removal fractions\r\n                fractionToRemove = 1.0;\r\n            }\r\n\r\n            for (int i = 0; i < swardSpeciesName.Length; i++)\r\n            {\r\n                speciesFraction[i] = harvestableSwardBiomass(swardSpeciesName[i], \"Harvestable\") / totalHarvestableAmount;\r\n                if (swardSpeciesType[i] == \"PMF\")\r\n                {\r\n                    // check whether the plant is alive\r\n                    bool speciesIsAlive = (bool)myZone.Get(swardSpeciesName[i]+\".IsEmerged\");\r\n                    if (speciesIsAlive)\r\n                    {\r\n                        // set removal fractions (these overrides the default removals in the plant)\r\n                        setRemoveFraction(swardSpeciesName[i], fractionToRemove);\r\n\r\n                        // do the actual biomass removal\r\n                        foreach (Plant species in PMFSpecies)\r\n                        {\r\n                            if(species.Name == swardSpeciesName[i])\r\n                            {\r\n                                species.RemoveBiomass(removalType, defoliationFractions);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    // check whether the plant is alive\r\n                    bool speciesIsAlive = (bool)myZone.Get(swardSpeciesName[i]+\".IsAlive\");\r\n                    if (speciesIsAlive)\r\n                    {\r\n                        // set removal amount (needs to be in kg/ha)\r\n                        double amountRequired = (double)myZone.Get(swardSpeciesName[i]+\".HarvestableWt\");\r\n                        if (amountToRemove > 0.0)\r\n                            amountRequired = amountToRemove * speciesFraction[i] * 10.0;\r\n\r\n                        // do the actual biomass removal\r\n                        foreach (AgPasture.PastureSpecies species in AgPSpecies)\r\n                        {\r\n                            if(species.Name == swardSpeciesName[i])\r\n                            {\r\n                                species.RemoveBiomass(amount: amountRequired, type: \"SetRemoveAmount\");\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // get the amounts of biomass and N after today's defoliation\r\n            double postRemovalDM = standingSwardBiomassWt;\r\n            double postRemovalN = standingSwardBiomassN;\r\n\r\n            // get total defoliation (total plant stuff lost)\r\n            DefoliatedWt = preRemovalDM - postRemovalDM;\r\n            DefoliatedN = preRemovalN - postRemovalN;\r\n\r\n            // get amounts harvested, removed, and returned\r\n            manageDefoliatedBiomass();\r\n        }\r\n\r\n        /// <summary>Sets the biomass removal fractions for PMF plants.</summary>\r\n        /// <param name=\"plantName\">The name of PMF species</param>\r\n        /// <param name=\"fractionHarvestable\">The fraction of harvestable biomass to be removed (0-1)</param>\r\n        private void setRemoveFraction(string plantName, double fractionHarvestable)\r\n        {\r\n            foreach (Plant species in PMFSpecies)\r\n            {\r\n                if ((species.Name == plantName) && (species.IsAlive))\r\n                {\r\n                    double fractionToRemove;\r\n                    double fractionToResidue;\r\n\r\n                    // set removal fractions (these overrides the default removals in the plant)\r\n                    foreach (IOrgan organ in Apsim.Children(species, typeof(IOrgan)))\r\n                    {\r\n                        // first get the removal for Live material\r\n                        fractionToRemove = (double)myZone.Get(species.Name + \".\" + organ.Name + \".BiomassRemovalDefaults.\" + typeOfDefoliation + \".FractionLiveToRemove\");\r\n                        if (RemoveAllBiomassIsEnabled && (fractionToRemove > 0.0))\r\n                            fractionToRemove = 0.95;\r\n                        fractionToRemove = fractionHarvestable * fractionToRemove;\r\n                        fractionToRemove = Math.Min(1.0, fractionToRemove);\r\n                        defoliationFractions.SetFractionToRemove(organ.Name, fractionToRemove, \"Live\");\r\n                        if (RemoveAllBiomassIsEnabled)\r\n                            fractionToResidue = 0.0;\r\n                        else\r\n                            fractionToResidue = (double)myZone.Get(species.Name + \".\" + organ.Name + \".BiomassRemovalDefaults.\" + typeOfDefoliation + \".FractionLiveToResidue\");\r\n                        fractionToResidue = Math.Min(fractionHarvestable * fractionToResidue, 1.0 - fractionToRemove);\r\n                        defoliationFractions.SetFractionToResidue(organ.Name, fractionToResidue, \"Live\");\r\n\r\n                        // then get the removal for Dead material\r\n                        fractionToRemove = (double)myZone.Get(species.Name + \".\" + organ.Name + \".BiomassRemovalDefaults.\" + typeOfDefoliation + \".FractionDeadToRemove\");\r\n                        if (RemoveAllBiomassIsEnabled && (fractionToRemove > 0.0))\r\n                            fractionToRemove = 0.95;\r\n                        fractionToRemove = fractionHarvestable * fractionToRemove;\r\n                        fractionToRemove = Math.Min(1.0, fractionToRemove);\r\n                        defoliationFractions.SetFractionToRemove(organ.Name, fractionToRemove, \"Dead\");\r\n                        if (RemoveAllBiomassIsEnabled)\r\n                            fractionToResidue = 0.0;\r\n                        else\r\n                            fractionToResidue = (double)myZone.Get(species.Name + \".\" + organ.Name + \".BiomassRemovalDefaults.\" + typeOfDefoliation + \".FractionDeadToResidue\");\r\n                        fractionToResidue = Math.Min(fractionHarvestable * fractionToResidue, 1.0 - fractionToRemove);\r\n                        defoliationFractions.SetFractionToResidue(organ.Name, fractionToResidue, \"Dead\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /// <summary>Gathers the DM and N amounts harvested, to be removed, and to be returned.</summary>\r\n        private void manageDefoliatedBiomass()\r\n        {\r\n            double digestibilityStructural = 0.65;\r\n            double digestibilityNonStrucutural = 1.0;\r\n\r\n            if (DefoliatedWt > 0.0)\r\n            {\r\n                double speciesHarvestedWt;\r\n                double speciesHarvestedN;\r\n                double speciesFractionToRemove;\r\n                HarvestedWt = 0.0;\r\n                HarvestedN = 0.0;\r\n                RemovedWt = 0.0;\r\n                RemovedN = 0.0;\r\n\r\n                foreach (Plant species in PMFSpecies)\r\n                {\r\n                    if(species.AboveGround.Wt > 0.0)\r\n                    {\r\n                        // get the amount harvested (plant stuff removed from plants)\r\n                        speciesHarvestedWt = 0.0;\r\n                        speciesHarvestedN = 0.0;\r\n                        foreach (IOrgan organ in Apsim.Children(species, typeof(IOrgan)))\r\n                        {\r\n                            speciesHarvestedWt += (double)myZone.Get(species.Name+\".\"+organ.Name+\".Removed.Wt\");\r\n                            speciesHarvestedN += (double)myZone.Get(species.Name+\".\"+organ.Name+\".Removed.N\");\r\n                        }\r\n\r\n                        HarvestedWt += speciesHarvestedWt;\r\n                        HarvestedN += speciesHarvestedN;\r\n\r\n                        // get the DM fraction to be removed\r\n                        if(FractionDMToRemove>=0.0)\r\n                        {\r\n                            speciesFractionToRemove = FractionDMToRemove;\r\n                        }\r\n                        else\r\n                        { // use digestibility to define the fraction\r\n                            double fracStructural = species.AboveGround.StructuralWt/species.AboveGround.Wt;\r\n                            speciesFractionToRemove = (1.0 - fracStructural)*digestibilityNonStrucutural + fracStructural*digestibilityStructural;\r\n                            speciesFractionToRemove = Math.Min(1.0, Math.Max(0.0, speciesFractionToRemove));\r\n                        }\r\n\r\n                        // get the amounts actually removed from field\r\n                        RemovedWt += speciesHarvestedWt * speciesFractionToRemove;\r\n                        RemovedN += speciesHarvestedN * FractionNToRemove;\r\n                   }\r\n                }\r\n\r\n                foreach (AgPasture.PastureSpecies species in AgPSpecies)\r\n                {\r\n                    if(species.AboveGroundWt > 0.0)\r\n                    {\r\n                        // get the amount harvested\r\n                        speciesHarvestedWt = species.HarvestedWt*0.1;\r\n                        speciesHarvestedN = species.HarvestedN*0.1;\r\n                        HarvestedWt += speciesHarvestedWt;\r\n                        HarvestedN += speciesHarvestedN;\r\n\r\n                        // get fraction to be removed\r\n                        if(FractionDMToRemove>=0.0)\r\n                        {\r\n                            speciesFractionToRemove = FractionDMToRemove;\r\n                        }\r\n                        else\r\n                        { // use digestibility to define the fraction\r\n                            speciesFractionToRemove = species.HarvestedDigestibility;\r\n                        }\r\n\r\n                        // get the amounts actually removed from field\r\n                        RemovedWt += speciesHarvestedWt * speciesFractionToRemove;\r\n                        RemovedN += speciesHarvestedN * FractionNToRemove;\r\n                    }\r\n                }\r\n\r\n                // get the amounts to be returned to the field (as residue or dung+urine)\r\n                ReturnedWt = HarvestedWt - RemovedWt;\r\n                ReturnedN = HarvestedN - RemovedN;\r\n                if (ReturnType == ReturnAsTypes.AsDungUrine)\r\n                {\r\n                    if (NDungType == DungNContentTypes.DefineProportion)\r\n                        NReturnedInDung = ReturnedN * ProportionN2Dung;\r\n                    else\r\n                        NReturnedInDung = Math.Min(ReturnedN, ReturnedWt * 0.4 / CNRatioDung);\r\n                    NReturnedInDung = Math.Min(NReturnedInDung, ReturnedN);\r\n                    NReturnedInUrine = ReturnedN - NReturnedInDung;\r\n                }\r\n                else\r\n                {\r\n                    NReturnedInDung = 0.0;\r\n                    NReturnedInUrine = 0.0;\r\n                }\r\n            }\r\n        }\r\n\r\n        /// <summary>Returns the material not removed off field as residue.</summary>\r\n        private void returnResidues()\r\n        {\r\n            if ((ReturnedWt > 0.0) || (ReturnedN > 0.0))\r\n            {\r\n                PMF.BiomassRemovedType BiomassResidue = new PMF.BiomassRemovedType();\r\n                string[] type = new string[] { \"Grass\" };\r\n                float[] dltdm = new float[] { (float)(10.0 * ReturnedWt) };\r\n                float[] dltn = new float[] { (float)(10.0 * ReturnedN) };\r\n                float[] dltp = new float[] { 0 };\r\n                float[] fraction = new float[] { 1 };     // fraction is always 1.0 here\r\n\r\n                BiomassResidue.crop_type = \"Grass\";\r\n                BiomassResidue.dm_type = type;\r\n                BiomassResidue.dlt_crop_dm = dltdm;\r\n                BiomassResidue.dlt_dm_n = dltn;\r\n                BiomassResidue.dlt_dm_p = dltp;\r\n                BiomassResidue.fraction_to_residue = fraction;\r\n                BiomassRemoved.Invoke(BiomassResidue);\r\n            }\r\n        }\r\n\r\n        /// <summary>Returns the material not removed off field as dung and urine).</summary>\r\n        private void returnExcreta()\r\n        {\r\n            if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))\r\n            {\r\n                PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();\r\n                string[] type = new string[] { \"RuminantDung_PastureFed\" };\r\n                float[] dltdm = new float[] { (float)(10.0 * ReturnedWt) };\r\n                float[] dltn = new float[] { (float)(10.0 * NReturnedInDung) };\r\n                float[] dltp = new float[] { 0 };\r\n                float[] fraction = new float[] { 1 };     // fraction is always 1.0 here\r\n\r\n                BiomassDung.crop_type = \"RuminantDung_PastureFed\";\r\n                BiomassDung.dm_type = type;\r\n                BiomassDung.dlt_crop_dm = dltdm;\r\n                BiomassDung.dlt_dm_n = dltn;\r\n                BiomassDung.dlt_dm_p = dltp;\r\n                BiomassDung.fraction_to_residue = fraction;\r\n                BiomassRemoved.Invoke(BiomassDung);\r\n            }\r\n\r\n            if (NReturnedInUrine > 0.0)\r\n            {\r\n                double[] myUrineDeposition = new double[mySoil.Thickness.Length];\r\n                for (int z = 0; z < urineFraction.Length; z++)\r\n                    myUrineDeposition[z] = NReturnedInUrine * 10.0 * urineFraction[z];\r\n                Urea.AddKgHaDelta(SoluteSetterType.Fertiliser, myUrineDeposition);\r\n            }\r\n        }\r\n\r\n        // Auxiliary bits and pieces  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n        /// <summary>Type of defoliation to use</summary>\r\n        public enum DefoliationTypes\r\n        {\r\n            /// <summary>Cut</summary>\r\n            Cut,\r\n            /// <summary>Graze</summary>\r\n            Graze,\r\n            /// <summary>Harvest</summary>\r\n            Harvest\r\n        }\r\n\r\n        /// <summary>Flag how defoliations will be triggered</summary>\r\n        public enum DefoliationTriggerTypes\r\n        {\r\n            /// <summary>Setting a fixed interval</summary>\r\n            FixedInterval,\r\n            /// <summary>Setting a target (minimum) inteval</summary>\r\n            TargetInterval,\r\n            /// <summary>Setting a target (maximum) standing biomass</summary>\r\n            TargetStandingBiomass\r\n        }\r\n\r\n        /// <summary>How the DM amount given is interpreted</summary>\r\n        public enum DefoliateAmountTypes\r\n        {\r\n            /// <summary>Setting a DM amount to remove</summary>\r\n            DMToRemove,\r\n            /// <summary>Setting the residual DM amount</summary>\r\n            ResidualDM,\r\n            /// <summary>Remove according to crop's BiomassRemovalFractions</summary>\r\n            None_UseDefoliationFractions\r\n        }\r\n\r\n        /// <summary>Fraction of defoliated DM to remove from field</summary>\r\n        public enum DMRemovalTypes\r\n        {\r\n            /// <summary>Remove all DM</summary>\r\n            RemoveAll,\r\n            /// <summary>Remove no DM</summary>\r\n            RemoveNone,\r\n            /// <summary>Remove a user-defined fraction</summary>\r\n            UserDefinedFraction,\r\n            /// <summary>Remove a fraction based on plant digestibility</summary>\r\n            BasedOnDigestibility\r\n        }\r\n\r\n        /// <summary>Fraction of N in the defoliated material to remove from field</summary>\r\n        public enum NRemovalTypes\r\n        {\r\n            /// <summary>Remove all N</summary>\r\n            RemoveAll,\r\n            /// <summary>Remove no N</summary>\r\n            RemoveNone,\r\n            /// <summary>Remove a user-defined fraction</summary>\r\n            UserDefinedFraction,\r\n            /// <summary>Remove a fraction equal to DM removed</summary>\r\n            ProportionalToDM\r\n        }\r\n\r\n        /// <summary>Define how the non-removed material is returned to the field</summary>\r\n        public enum ReturnAsTypes\r\n        {\r\n            /// <summary>Return plant material as residue</summary>\r\n            AsResidue,\r\n            /// <summary>Return meterial as dung and urine</summary>\r\n            AsDungUrine\r\n        }\r\n\r\n        /// <summary>Define how the proportion of N in dung is defined</summary>\r\n        public enum DungNContentTypes\r\n        {\r\n            /// <summary>Define the proportion of N returned as dung</summary>\r\n            DefineProportion,\r\n            /// <summary>Define the C:N of dung</summary>\r\n            DefineCNratio\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "AutomaticManagementIsEnabled",
                      "Value": "False"
                    },
                    {
                      "Key": "DefoliationRotationStartDate",
                      "Value": "2000-01-15"
                    },
                    {
                      "Key": "DefoliationRotationEndDate",
                      "Value": "2100-12-31"
                    },
                    {
                      "Key": "DefoliateType",
                      "Value": "Graze"
                    },
                    {
                      "Key": "DefoliationTriggerType",
                      "Value": "FixedInterval"
                    },
                    {
                      "Key": "IntervalBetweenDefoliations",
                      "Value": "21"
                    },
                    {
                      "Key": "TargetStandingBiomass",
                      "Value": "200"
                    },
                    {
                      "Key": "DurationOfEachDefoliation",
                      "Value": "1"
                    },
                    {
                      "Key": "RemoveAmountType",
                      "Value": "DMToRemove"
                    },
                    {
                      "Key": "AmountForEachDefoliation",
                      "Value": "500"
                    },
                    {
                      "Key": "RemoveAllBiomassIsEnabled",
                      "Value": "True"
                    },
                    {
                      "Key": "DMRemoveType",
                      "Value": "UserDefinedFraction"
                    },
                    {
                      "Key": "FractionDMToRemove",
                      "Value": "1"
                    },
                    {
                      "Key": "NRemoveType",
                      "Value": "UserDefinedFraction"
                    },
                    {
                      "Key": "FractionNToRemove",
                      "Value": "1"
                    },
                    {
                      "Key": "ReturnType",
                      "Value": "AsResidue"
                    },
                    {
                      "Key": "NDungType",
                      "Value": "DefineCNratio"
                    },
                    {
                      "Key": "ProportionN2Dung",
                      "Value": "0.4"
                    },
                    {
                      "Key": "CNRatioDung",
                      "Value": "20"
                    },
                    {
                      "Key": "UrineDepth",
                      "Value": "250"
                    }
                  ],
                  "Name": "DefoliationManager",
                  "IncludeInDocumentation": false,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "// This will be replaced by the \"ExtraVariables\" section in \"Replacements\"\r\n\r\nusing System;\r\nusing Models.Core;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n    }\r\n}\r\n",
                  "Parameters": [],
                  "Name": "ExtraVariables",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "soil_albedo": 0.23,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "Canopies": [],
              "InitialResidueName": "grass",
              "InitialResidueType": "grass",
              "InitialResidueMass": 1000.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 30.0,
              "FractionFaecesAdded": 1.0,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": "Udic Haplustept (US),  Immature Pallic Soil (NZ)",
              "LocalName": "Paparua Deep Sandy Loam",
              "Site": "LURDF",
              "NearestTown": "Lincoln",
              "Region": "Canterbury",
              "State": null,
              "Country": "New Zealand",
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "DataSource": "Adapted based on data from the NZ National Soils Database plus published data (Carey et al, 2002; Schwaertzel et al, 2011; Woods et al, 2016)",
              "Comments": "Different references name the soil at the site as either Templeton sandy loam or Paparua sandy loam (very similar soils)",
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Depth": [
                    "0-10",
                    "10-22",
                    "22-37",
                    "37-60",
                    "60-73",
                    "73-98",
                    "98-120",
                    "120-150"
                  ],
                  "Thickness": [
                    100.0,
                    120.0,
                    150.0,
                    230.0,
                    130.0,
                    250.0,
                    220.0,
                    300.0
                  ],
                  "NO3N": [
                    11.10185956147655,
                    8.8747914734271873,
                    4.0559509831354781,
                    0.36671947427096357,
                    0.3667194742709608,
                    0.15159344482840426,
                    0.072921934919511183,
                    0.066925445054209068
                  ],
                  "NH4N": [
                    1.3877324451845687,
                    1.0031235177747662,
                    0.42270867377952642,
                    0.07334389485419221,
                    0.073343894854192432,
                    0.054769866343026476,
                    0.017000511230675516,
                    0.013385089010841966
                  ],
                  "PH": [
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0
                  ],
                  "CL": null,
                  "EC": null,
                  "ESP": null,
                  "Name": "Chemical",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Depth": [
                    "0-10",
                    "10-22",
                    "22-37",
                    "37-60",
                    "60-73",
                    "73-98",
                    "98-120",
                    "120-150"
                  ],
                  "Thickness": [
                    100.0,
                    120.0,
                    150.0,
                    230.0,
                    130.0,
                    250.0,
                    220.0,
                    300.0
                  ],
                  "ParticleSizeClay": [
                    17.8,
                    17.8,
                    15.9,
                    14.1,
                    7.3,
                    9.6,
                    7.0,
                    9.5
                  ],
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "BD": [
                    1.154,
                    1.295,
                    1.441,
                    1.544,
                    1.505,
                    1.504,
                    1.517,
                    1.479
                  ],
                  "AirDry": [
                    0.051,
                    0.14,
                    0.129,
                    0.111,
                    0.08,
                    0.072,
                    0.085,
                    0.082
                  ],
                  "LL15": [
                    0.151,
                    0.146,
                    0.129,
                    0.111,
                    0.08,
                    0.072,
                    0.085,
                    0.082
                  ],
                  "DUL": [
                    0.338,
                    0.328,
                    0.279,
                    0.271,
                    0.244,
                    0.234,
                    0.254,
                    0.257
                  ],
                  "SAT": [
                    0.512,
                    0.469,
                    0.427,
                    0.394,
                    0.413,
                    0.406,
                    0.401,
                    0.413
                  ],
                  "KS": [
                    2559.2,
                    2142.3,
                    1019.5,
                    310.6,
                    434.9,
                    791.0,
                    744.1,
                    411.2
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "Name": "Physical",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.151,
                        0.146,
                        0.129,
                        0.111,
                        0.08,
                        0.072,
                        0.085,
                        0.082
                      ],
                      "KL": [
                        0.12,
                        0.11,
                        0.08,
                        0.05,
                        0.02,
                        0.005,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "RedCloverSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilWater, Models",
                  "SummerDate": "1-Oct",
                  "SummerU": 8.0,
                  "SummerCona": 4.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 5.0,
                  "WinterCona": 1.5,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.0,
                  "Salb": 0.2,
                  "CN2Bare": 60.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "slope": 0.0,
                  "discharge_width": 0.0,
                  "catchment_area": 0.0,
                  "max_pond": 0.0,
                  "Thickness": [
                    100.0,
                    120.0,
                    150.0,
                    230.0,
                    130.0,
                    250.0,
                    220.0,
                    300.0
                  ],
                  "Depth": [
                    "0-10",
                    "10-22",
                    "22-37",
                    "37-60",
                    "60-73",
                    "73-98",
                    "98-120",
                    "120-150"
                  ],
                  "SWCON": [
                    0.59,
                    0.59,
                    0.55,
                    0.48,
                    0.53,
                    0.5,
                    0.51,
                    0.45
                  ],
                  "KLAT": null,
                  "PrecipitationInterception": 0.0,
                  "Name": "SoilWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "Depth": [
                    "0-10",
                    "10-22",
                    "22-37",
                    "37-60",
                    "60-73",
                    "73-98",
                    "98-120",
                    "120-150"
                  ],
                  "FOMCNRatio": 35.0,
                  "Thickness": [
                    100.0,
                    120.0,
                    150.0,
                    230.0,
                    130.0,
                    250.0,
                    220.0,
                    300.0
                  ],
                  "Carbon": [
                    2.94,
                    2.17,
                    0.99,
                    0.35,
                    0.24,
                    0.2,
                    0.15,
                    0.1
                  ],
                  "SoilCNRatio": [
                    11.3,
                    11.3,
                    11.5,
                    11.75,
                    12.0,
                    12.25,
                    12.5,
                    12.5
                  ],
                  "FBiom": [
                    0.08,
                    0.055,
                    0.015,
                    0.009,
                    0.008,
                    0.007,
                    0.005,
                    0.005
                  ],
                  "FInert": [
                    0.3,
                    0.45,
                    0.72,
                    0.87,
                    0.95,
                    0.99,
                    0.995,
                    0.995
                  ],
                  "FOM": [
                    450.0,
                    412.5,
                    322.5,
                    150.0,
                    75.0,
                    45.0,
                    30.0,
                    15.0
                  ],
                  "Name": "Organic",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "CERESSoilTemperature",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 0.75,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": null,
                  "Name": "Initial water",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-75",
                    "75-100",
                    "100-150"
                  ],
                  "Thickness": [
                    150.0,
                    150.0,
                    450.0,
                    250.0,
                    500.0
                  ],
                  "NO3N": null,
                  "NH4N": null,
                  "SW": null,
                  "OC": null,
                  "EC": null,
                  "CL": null,
                  "ESP": null,
                  "PH": null,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "Initial nitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "DirectedGraphInfo": {
                    "$type": "Models.Graph.DirectedGraph, Models",
                    "Nodes": [
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Inert",
                        "Location": "656, 254",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "SurfaceResidue",
                        "Location": "566, 69",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "FOMLignin",
                        "Location": "261, 69",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "FOMCellulose",
                        "Location": "397, 70",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "FOMCarbohydrate",
                        "Location": "123, 70",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Microbial",
                        "Location": "218, 299",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Humic",
                        "Location": "458, 293",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Urea",
                        "Location": "529, 419",
                        "Colour": "0, 158, 115",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "NO3",
                        "Location": "185, 435",
                        "Colour": "0, 158, 115",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "NH4",
                        "Location": "357, 422",
                        "Colour": "0, 158, 115",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Atmosphere",
                        "Location": "48, 338",
                        "Colour": "White",
                        "OutlineColour": "White",
                        "Transparent": true
                      }
                    ],
                    "Arcs": [
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "SurfaceResidue",
                        "DestinationName": "Microbial",
                        "Location": "415, 173",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "SurfaceResidue",
                        "DestinationName": "Humic",
                        "Location": "499, 172",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMLignin",
                        "DestinationName": "Microbial",
                        "Location": "259, 221",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMLignin",
                        "DestinationName": "Humic",
                        "Location": "255, 105",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCellulose",
                        "DestinationName": "Microbial",
                        "Location": "370, 184",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCellulose",
                        "DestinationName": "Humic",
                        "Location": "463, 224",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCarbohydrate",
                        "DestinationName": "Microbial",
                        "Location": "141, 131",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCarbohydrate",
                        "DestinationName": "Humic",
                        "Location": "204, 215",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Microbial",
                        "DestinationName": "Microbial",
                        "Location": "335, 301",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Microbial",
                        "DestinationName": "Humic",
                        "Location": "319, 278",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Humic",
                        "DestinationName": "Microbial",
                        "Location": "334, 340",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Urea",
                        "DestinationName": "NH4",
                        "Location": "433, 416",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "NO3",
                        "DestinationName": "Atmosphere",
                        "Location": "1, 319",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "NH4",
                        "DestinationName": "NO3",
                        "Location": "243, 409",
                        "Colour": "Black",
                        "Text": null
                      }
                    ]
                  },
                  "ResourceName": "Nutrient",
                  "Name": "Nutrient",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "RedClover",
              "IsAlive": false,
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "RedClover",
              "Name": "RedClover",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "",
                "[RedClover].Population",
                "[RedClover].CropType",
                "[RedClover].Leaf.RadIntTot as InterceptedRadiation",
                "",
                "[Irrigation].IrrigationApplied as IrrigationApplied",
                "[Soil].SoilWater.Es as Evaporation",
                "[RedClover].Leaf.Transpiration as Transpiration",
                "[Soil].SoilWater.Drainage as Drainage",
                "[Soil].SoilWater.Runoff as Runoff",
                "sum([Soil].SoilWater.SWmm) as TotalSWC",
                "sum([Soil].DULmm) as TotalDUL",
                "sum([Soil].LL15mm) as TotalLL15",
                "[Fertiliser].NitrogenApplied as FertiliserN",
                "([Soil].SoilWater.LeachNH4 + [Soil].SoilWater.LeachNO3) as LeachedN",
                "(-1*[RedClover].Root.NUptake) as UptakeN",
                "[RedClover].Nodule.NFixed as FixedN",
                "",
                "[RedClover].Total.Wt",
                "[RedClover].AboveGround.Wt",
                "[RedClover].BelowGround.Wt",
                "[RedClover].Leaf.Live.NConc",
                "[RedClover].Leaf.LAI",
                "[RedClover].Leaf.Live.Wt",
                "[RedClover].Stem.Live.Wt",
                "[RedClover].Inflorescence.Live.Wt",
                "[RedClover].Taproot.Live.Wt",
                "[RedClover].Root.Live.Wt",
                "",
                "[DefoliationManager].Script.DefoliatedWt as HarvestedWt"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "Name": "Report",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Biomass",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.Total.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.AboveGround.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "AboveGround",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.BelowGround.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "BelowGround",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "PlantParts",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.Leaf.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Leaf",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.Stem.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stem",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.Inflorescence.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Inflorescence",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -990142,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.Taproot.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Taproot",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "RedClover.Root.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 2,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Harvests",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "HarvestedWt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Events",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "HarvestedWt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": true,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Cumulative",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Water",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16747854,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "TotalSWC",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "WaterContent",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "TotalDUL",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "DUL",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "TotalLL15",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LL15",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "IncludeInDocumentation": true,
  "Enabled": true,
  "ReadOnly": false
}